---
- name: Install celery
  gather_facts: No
  hosts: default

  tasks:
    - name: Install prerequistite packages
      yum:
        name:
          - git
      become: true
      become_user: root

    - name: Install system Python
      yum:
        name:
          - python3
          - python3-pip
          - python3-setuptools
          - python3-venv
      become: true
      become_user: root

    - name: Ensure virtualenv is using a recent pip version
      pip:
        name: "pip"
        version: ">=20.3"
        virtualenv: "{{ celery_virtualenv_path }}"
        virtualenv_command: "python3 -m venv"
      become: true
      become_user: root

    - name: Check for requirements file
      stat:
        path: "{{ celery_repo_path }}/requirements.txt"
      register: req_result

    - name: Install package in virtualenv
      pip:
        # Install from requirements if it exists, otherwise install the repo path
        requirements:
          "{{ req_result.stat.exists | ternary(req_result.stat.path, omit) }}"
        name:
          "{{ req_result.stat.exists | ternary(omit, celery_repo_path) }}"
        chdir: "{{ celery_repo_path }}"
        state: forcereinstall
        virtualenv: "{{ celery_virtualenv_path }}"
        virtualenv_command: "python3 -m venv"
      become: true
      become_user: root
      when: git_result.changed
      notify: Restart Celery

    - name: Create Celery daemon user / group
      user:
        name: "{{ celery_user_name }}"
        system: true
        home: "{{ celery_virtualenv_path }}"
        create_home: false
        shell: /usr/sbin/nologin
      become: true
      become_user: root
      register: user_result

    - name: Set facts about Celery daemon user / group
      set_fact:
        celery_user_uid: "{{ user_result.uid }}"
        celery_user_gid: "{{ user_result.group }}"

    - name: Install Celery service
      template:
        src: "celery.service.j2"
        dest: "/etc/systemd/system/celery.service"
        owner: root
        group: root
        mode: 0644
      become: true
      become_user: root
      notify: Restart Celery

    - name: Deploy Celery environment config file
      template:
        src: "celery.conf.j2"
        dest: "{{ celery_environment_file_path }}"
        owner: root
        group: root
        # This file contains secrets, so only root (systemd) can read it
        mode: 0600
      become: true
      become_user: root
      notify: Restart Celery

    - name: Enable Celery service
      systemd:
        name: celery
        daemon_reload: true
        enabled: true
      become: true
      become_user: root
